<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - ASP System</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    @RenderSection("Styles", required: false)
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <style>
        html {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }
        body {
            font-family: 'Montserrat', sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            background-color: #f0f2f5;
        }
        .navbar-custom {
            background-color: #273F4F !important;
        }
        .navbar-brand, .nav-link {
            font-family: 'Montserrat', sans-serif !important;
            color: #ffffff !important;
        }
        .nav-link.active, .dropdown-toggle.active {
            font-weight: bold;
            text-decoration: underline;
        }
        .navbar-collapse {
            justify-content: flex-end !important;
        }
        .dropdown-item.active {
            font-weight: bold;
            background-color: rgba(0,0,0,0.1);
            color: black;
        }
        /* Fix for dropdown staying open */
        .dropdown:hover .dropdown-menu {
            display: block;
        }
    </style>
</head>
<body>

<!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark navbar-custom">
    <div class="container-fluid">
        <a class="navbar-brand me-auto" href="@Url.Action("Dashboard", "Admin")">Admin Panel</a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAdmin"
                aria-controls="navbarNavAdmin" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNavAdmin">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link @(ViewContext.RouteData.Values["Action"] != null && ViewContext.RouteData.Values["Action"].ToString() == "Dashboard" ? "active" : "")"
                       href="@Url.Action("Dashboard", "Admin")">Dashboard</a>
                </li>

                <!-- Academic Dropdown -->
                <li class="nav-item dropdown">
                    @{
                        var isAcademicActive = ViewContext.RouteData.Values["Controller"] != null &&
                                               (ViewContext.RouteData.Values["Controller"].ToString() == "Curriculum" ||
                                                ViewContext.RouteData.Values["Controller"].ToString() == "Course" ||
                                                ViewContext.RouteData.Values["Action"].ToString() == "Schedules" ||
                                                ViewContext.RouteData.Values["Action"].ToString() == "Index" && 
                                                (ViewContext.RouteData.Values["Controller"].ToString() == "Curriculum" || 
                                                 ViewContext.RouteData.Values["Controller"].ToString() == "Course"));
                    }
                    <a class="nav-link dropdown-toggle @(isAcademicActive ? "active" : "")"
                       href="@Url.Action("Index", "Curriculum")"
                       id="academicDropdown"
                       role="button"
                       data-bs-toggle="dropdown"
                       aria-expanded="false">
                        Course Management
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="academicDropdown">
                        <li>
                            <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"] != null && ViewContext.RouteData.Values["Controller"].ToString() == "Curriculum" ? "active" : "")"
                               href="@Url.Action("Index", "Curriculum")">Curriculum</a>
                        </li>
                        <li>
                            <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"] != null && ViewContext.RouteData.Values["Controller"].ToString() == "Course" ? "active" : "")"
                               href="@Url.Action("Index", "Course")">Courses</a>
                        </li>
                        <li>
                            <a class="dropdown-item @(ViewContext.RouteData.Values["Action"] != null && ViewContext.RouteData.Values["Action"].ToString() == "Schedules" ? "active" : "")"
                               href="@Url.Action("Schedules", "CourseManagement")">Schedules</a>
                        </li>
                    </ul>
                </li>

                <!-- Student Management Dropdown -->
                <li class="nav-item dropdown">
                    @{
                    var isStudentActive = ViewContext.RouteData.Values["Action"] != null &&
                    (ViewContext.RouteData.Values["Action"].ToString() == "Students" ||
                    ViewContext.RouteData.Values["Controller"].ToString() == "Enrollment");
                    }
                    <a class="nav-link dropdown-toggle @(isStudentActive ? "active" : "")"
                       href="@Url.Action("Students", "CourseManagement")"
                       id="studentDropdown"
                       role="button"
                       data-bs-toggle="dropdown"
                       aria-expanded="false">
                        Student Management
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="studentDropdown">
                        <li>
                            <a class="dropdown-item @(ViewContext.RouteData.Values["Action"] != null && ViewContext.RouteData.Values["Action"].ToString() == "Students" ? "active" : "")"
                               href="@Url.Action("Students", "CourseManagement")">Students</a>
                        </li>
                        <li>
                            <a class="dropdown-item @(ViewContext.RouteData.Values["Controller"] != null && ViewContext.RouteData.Values["Action"].ToString() == "Enrollment" ? "active" : "")"
                               href="@Url.Action("Index", "Enrollment")">Enrollments</a>
                        </li>
                    </ul>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Index", "Home")">Logout</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<!-- Main Content -->
<div class="container mt-4">
    @RenderBody()
</div>

<!-- Bootstrap JS + Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="@Url.Content("~/Scripts/JQuery/jquery.js")"></script>

<script>
    $(document).ready(function() {
        // Initialize dropdowns
        var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
        var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
            return new bootstrap.Dropdown(dropdownToggleEl)
        });

        // Fix dropdown behavior
        $('.dropdown-menu a').on('click', function(e) {
            // Only prevent default if it's a dropdown item that should keep the menu open
            if ($(this).hasClass('dropdown-keep-open')) {
                e.preventDefault();
                e.stopPropagation();
            }
        });

        // Close dropdown when clicking outside
        $(document).on('click', function(e) {
            if (!$(e.target).closest('.dropdown').length) {
                $('.dropdown-menu').removeClass('show');
            }
        });
    });
</script>

@RenderSection("Scripts", required: false)

</body>
</html>